function optdigitsubset = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   OPTDIGITSUBSET = IMPORTFILE(FILENAME) Reads data from text file
%   FILENAME for the default selection.
%
%   OPTDIGITSUBSET = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from
%   rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   optdigitsubset = importfile('optdigitsubset.txt', 1, 1125);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/05/23 16:18:15

%% Initialize variables.
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%1s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%5s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end


%% Create output variable
optdigitsubset = table;
optdigitsubset.VarName1 = cell2mat(raw(:, 1));
optdigitsubset.VarName2 = cell2mat(raw(:, 2));
optdigitsubset.VarName3 = cell2mat(raw(:, 3));
optdigitsubset.VarName4 = cell2mat(raw(:, 4));
optdigitsubset.VarName5 = cell2mat(raw(:, 5));
optdigitsubset.VarName6 = cell2mat(raw(:, 6));
optdigitsubset.VarName7 = cell2mat(raw(:, 7));
optdigitsubset.VarName8 = cell2mat(raw(:, 8));
optdigitsubset.VarName9 = cell2mat(raw(:, 9));
optdigitsubset.VarName10 = cell2mat(raw(:, 10));
optdigitsubset.VarName11 = cell2mat(raw(:, 11));
optdigitsubset.VarName12 = cell2mat(raw(:, 12));
optdigitsubset.VarName13 = cell2mat(raw(:, 13));
optdigitsubset.VarName14 = cell2mat(raw(:, 14));
optdigitsubset.VarName15 = cell2mat(raw(:, 15));
optdigitsubset.VarName16 = cell2mat(raw(:, 16));
optdigitsubset.VarName17 = cell2mat(raw(:, 17));
optdigitsubset.VarName18 = cell2mat(raw(:, 18));
optdigitsubset.VarName19 = cell2mat(raw(:, 19));
optdigitsubset.VarName20 = cell2mat(raw(:, 20));
optdigitsubset.VarName21 = cell2mat(raw(:, 21));
optdigitsubset.VarName22 = cell2mat(raw(:, 22));
optdigitsubset.VarName23 = cell2mat(raw(:, 23));
optdigitsubset.VarName24 = cell2mat(raw(:, 24));
optdigitsubset.VarName25 = cell2mat(raw(:, 25));
optdigitsubset.VarName26 = cell2mat(raw(:, 26));
optdigitsubset.VarName27 = cell2mat(raw(:, 27));
optdigitsubset.VarName28 = cell2mat(raw(:, 28));
optdigitsubset.VarName29 = cell2mat(raw(:, 29));
optdigitsubset.VarName30 = cell2mat(raw(:, 30));
optdigitsubset.VarName31 = cell2mat(raw(:, 31));
optdigitsubset.VarName32 = cell2mat(raw(:, 32));
optdigitsubset.VarName33 = cell2mat(raw(:, 33));
optdigitsubset.VarName34 = cell2mat(raw(:, 34));
optdigitsubset.VarName35 = cell2mat(raw(:, 35));
optdigitsubset.VarName36 = cell2mat(raw(:, 36));
optdigitsubset.VarName37 = cell2mat(raw(:, 37));
optdigitsubset.VarName38 = cell2mat(raw(:, 38));
optdigitsubset.VarName39 = cell2mat(raw(:, 39));
optdigitsubset.VarName40 = cell2mat(raw(:, 40));
optdigitsubset.VarName41 = cell2mat(raw(:, 41));
optdigitsubset.VarName42 = cell2mat(raw(:, 42));
optdigitsubset.VarName43 = cell2mat(raw(:, 43));
optdigitsubset.VarName44 = cell2mat(raw(:, 44));
optdigitsubset.VarName45 = cell2mat(raw(:, 45));
optdigitsubset.VarName46 = cell2mat(raw(:, 46));
optdigitsubset.VarName47 = cell2mat(raw(:, 47));
optdigitsubset.VarName48 = cell2mat(raw(:, 48));
optdigitsubset.VarName49 = cell2mat(raw(:, 49));
optdigitsubset.VarName50 = cell2mat(raw(:, 50));
optdigitsubset.VarName51 = cell2mat(raw(:, 51));
optdigitsubset.VarName52 = cell2mat(raw(:, 52));
optdigitsubset.VarName53 = cell2mat(raw(:, 53));
optdigitsubset.VarName54 = cell2mat(raw(:, 54));
optdigitsubset.VarName55 = cell2mat(raw(:, 55));
optdigitsubset.VarName56 = cell2mat(raw(:, 56));
optdigitsubset.VarName57 = cell2mat(raw(:, 57));
optdigitsubset.VarName58 = cell2mat(raw(:, 58));
optdigitsubset.VarName59 = cell2mat(raw(:, 59));
optdigitsubset.VarName60 = cell2mat(raw(:, 60));
optdigitsubset.VarName61 = cell2mat(raw(:, 61));
optdigitsubset.VarName62 = cell2mat(raw(:, 62));
optdigitsubset.VarName63 = cell2mat(raw(:, 63));
optdigitsubset.VarName64 = cell2mat(raw(:, 64));

